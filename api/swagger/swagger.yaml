swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /order:
    x-swagger-router-controller: order
    get:
      description: get order 
      operationId: getOrder
      parameters:
        - name: id
          in: query
          description: The ID of the order
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/getOrders"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: post an order
      operationId: postOrder
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/postOrder"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/getOrders"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /calendar: 
    get:
      description: get events
      operationId: getEvents
      parameters:
        - name: id
          in: query
          description: The ID of the user
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/getOrders"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: calender 
    post:
      description: post an order
      operationId: postEvent
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/postEvent"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/postEvent"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: calender
    delete:
      description: delet calendar
      operationId: deleteEvent
      parameters:
        - name: id
          in: query
          description: The ID of the event
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/getOrders"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: calender
    put:
      description: update event 
      operationId: updateEvent
      parameters:
        - name: eventID
          in: query
          description: The ID of the event
          required: true
          type: string
        - name: userID
          in: query
          description: The ID of the user
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/postEvent"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/updateEvent"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: calender
  /calendar/{userID}:
    get:
      description: get a special event with ID
      operationId: getEventWithID
      parameters:
        - name: "userID"
          in: "path"
          description: "The userID which we need to retrieve a data"
          required: true
          type: "string"
        - name: eventID
          in: query
          description: The ID of the event
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/getOrders"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: calender
  /complexity: 
    post:
      description: post text
      operationId: postComplexity
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Complexity"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Complexity"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: complexity
    get:
      description: verbose
      operationId: modeComplexity
      parameters:
        - in: "query"
          name: "mode"
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Complexity"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: complexity 
# complex objects have schema definitions
definitions:
  getOrders:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    type: "object"
    properties:
      message:
        type: string
  postOrder:
    type: "object"
    properties:
      type:
        type: "string"
      description:
        type: "string"
      size:
        type: "string"
      address:
        type: "string"
      name:
        type: "string"
  postEvent:
    type: "object"
    properties:
      title:
        type: "string"
      startTime:
        type: "string"
      endTime:
        type: "string"
      width:
        type: "number"
      height:
        type: "number"
  updateEvent:
    required:
      - message
    properties:
      message:
        type: string
  Complexity:
    type: "object"
    properties:
      str:
        type: "string"
      strGreen:
        type: "string"

